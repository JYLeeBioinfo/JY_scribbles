#!/usr/bin/python

import sys


if len(sys.argv[:])==1:
        print("Try 'comb_multiple-criteria -h' or 'comb_multiple-criteria --help' to find out how to use it.")
        quit()
elif ('-h' in sys.argv[1:]) | ('--help' in sys.argv[1:]) :
        print("write down the range of columns you want to use as criteria just as written in the example below.")
        print()
        print("columns you want to choose(the order is important):")
        print("file_1 : 1,2,3,4,7,9,11,14,15,16")
        print("file_2 : 7,8,9,11,1,3,5,16,15,14")
        print()
        print("command:")
        print("$ comb_multiple-criteria file_1 1:4,7,9,11,14:16 file_2 7:9,11,1:5:2,16:14:-1")
        quit()
elif len(sys.argv[1:])!=4:
        assert 0,"the numbet of argument needed is 4, "+str(len(sys.argv[1:]))+" given."
        quit()

def file_to_dict(handle, indices):
    d = {}
    line = handle.readline()
    while line:
        sp = line.strip("\n").strip("\r").split('\t')
        d[ "\t".join( complexlice(sp,indices) ) ] = line.strip("\n").strip("\r")
        line = handle.readline()
    return d

def complexlice(x,indices):
        return [ x[i].strip() if len(x)>i else "" for i in indices ]

def organize_input_indices(x):
        indices=x.split(",")
        res=[]
        for item in indices:
                if item.find(":")!=-1:
                        item=[int(i) for i in item.split(":")]
                        if len(item)==2 :
                                res+=list( range( (item[0]-1),item[1]) )
                        elif len(item)==3 :
                                res+=list(  range( (item[0]-1),item[1]+( -2 if item[2]<0 else 0 ), item[2] )  )
                        elif len(item)>3 : assert 0,"Too many \":\" given"; quit()
                else:
                        res+=[int(item)-1]
        return res


argv = sys.argv[1:]
file1 = open(argv[0])
file1_index = organize_input_indices(argv[1])
file2 = open(argv[2])
file2_index = organize_input_indices(argv[3])

assert len(file1_index)==len(file2_index), "the number of criteria columns is not equal"

d_file2 = file_to_dict(file2, file2_index)
file2.close()

line = file1.readline()
while line:
    str_output = (line.strip("\n").strip("\r"))
    sp = line.strip("\n").strip("\r").split('\t')
    try:
        str_output += ( "\t"+d_file2[ "\t".join( complexlice(sp,file1_index) ) ] )
    except:
        pass
    str_output += '\n'
    sys.stdout.write(str_output)
    line = file1.readline()

file1.close()
